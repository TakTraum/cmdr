using System;

using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Windows.Input;
		
public class Part
{
    public string PartName { get; set; }
    public int PartId { get; set; }
	

}


public class Program
{
	public static int find_index(IEnumerable<String> txtLines, String needle)
	{
		int index = 1;
		bool found = false;
		foreach(string line in txtLines) {
			 if(line.StartsWith(needle)) { 
				found = true; 
				break; 
			 }
			 index ++;
		}
		
		if(!found)
			index = -1;
		
		return index;
	}
	
	///<summary>Finds the index of the first item matching an expression in an enumerable.</summary>
	///<param name="items">The enumerable to search.</param>
	///<param name="predicate">The expression to test the items against.</param>
	///<returns>The index of the first matching item, or -1 if no items match.</returns>
	public static int FindIndex<T>(this IEnumerable<T> items, Func<T, bool> predicate) {
		if (items == null) throw new ArgumentNullException("items");
		if (predicate == null) throw new ArgumentNullException("predicate");

		int retVal = 0;
		foreach (var item in items) {
			if (predicate(item)) return retVal;
			retVal++;
		}
		return -1;
	}
	///<summary>Finds the index of the first occurrence of an item in an enumerable.</summary>
	///<param name="items">The enumerable to search.</param>
	///<param name="item">The item to find.</param>
	///<returns>The index of the first matching item, or -1 if the item was not found.</returns>
	public static int IndexOf<T>(this IEnumerable<T> items, T item) { return items.FindIndex(i => EqualityComparer<T>.Default.Equals(item, i)); }


	public static void Main()
	{
		List<Part> parts = new List<Part>();		
		
        parts.Add(new Part() { PartName = "crank arm", PartId = 1 });
        parts.Add(new Part() { PartName = "chain ring", PartId = 2 });
		
		var a = parts.Select(c => c.PartName);
		
		//for(i=0; 
		//int index = a.FindIndex(x => x.StartsWith("chain ring"));
		var ret = a;
			
		
		Console.WriteLine("{0}", find_index(a, "chain ring"));
	}
}